{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","selectedUserId","titleSearch","onSearchByTitle","onSelectUserById","onSetTodosStatus","className","id","type","name","placeholder","value","onChange","target","event","map","todo","classNames","TodoList__item","completed","key","readOnly","title","userId","button","onClick","defaultProps","request","url","fetch","then","response","json","CurrentUser","state","user","this","loadUser","prevProps","props","data","setState","email","phone","onClearUser","React","Component","App","todosStatus","status","prepareTodos","visibleTodos","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6aa5d06e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './TodoList.scss';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoList = ({\n  todos,\n  selectedUserId,\n  titleSearch,\n  onSearchByTitle,\n  onSelectUserById,\n  onSetTodosStatus,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <div className=\"TodoList__filter-container\">\n      <input\n        className=\"TodoList__search\"\n        id=\"TodoList-search\"\n        type=\"text\"\n        name=\"TodoList-search\"\n        placeholder=\"Search\"\n        value={titleSearch}\n        onChange={({ target }) => onSearchByTitle(target)}\n      />\n\n      <select\n        name=\"TodoList-select\"\n        id=\"TodoList-select\"\n        className=\"TodoList__select\"\n        onChange={event => onSetTodosStatus(event.target.value)}\n      >\n        <option value=\"All\">All</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Completed\">Completed</option>\n\n      </select>\n    </div>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n\n        {todos.map(todo => (\n\n          <li\n            className={classNames({\n              TodoList__item: true,\n              'TodoList__item--unchecked': !todo.completed,\n              'TodoList__item--checked': todo.completed,\n            })}\n            key={todo.id}\n          >\n\n            <label>\n              <input type=\"checkbox\" readOnly />\n              <p>{todo.title}</p>\n            </label>\n\n            {todo.userId\n              && (\n                <button\n                  className={classNames({\n                    'TodoList__user-button': true,\n                    button: true,\n                    'TodoList__user-button--selected':\n                      todo.userId === selectedUserId,\n                  })}\n                  type=\"button\"\n                  onClick={() => {\n                    onSelectUserById(todo.userId);\n                  }}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              )\n            }\n\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedUserId: PropTypes.number,\n  titleSearch: PropTypes.string,\n  onSearchByTitle: PropTypes.func.isRequired,\n  onSelectUserById: PropTypes.func.isRequired,\n  onSetTodosStatus: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  selectedUserId: 0,\n  titleSearch: '',\n};\n","const baseUrl = 'https://mate-api.herokuapp.com';\n\nexport function request(url) {\n  return fetch(`${baseUrl}${url}`)\n    .then(response => response.json());\n}\n\nexport const getTodos = () => request('/todos');\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\n\nimport './CurrentUser.scss';\n\nimport PropTypes from 'prop-types';\n\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    this.loadUser();\n  }\n\n  loadUser() {\n    getUser(this.props.userId)\n      .then(({ data }) => {\n        this.setState({ user: { ...data } });\n      });\n  }\n\n  render() {\n    const { id, name, email, phone } = this.state.user;\n    const { onClearUser } = this.props;\n\n    return (this.props && (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected User: #${id || 'loading...'}`}\n          </span>\n        </h2>\n        {this.state.user ? (\n          <>\n            <h3 className=\"CurrentUser__name\">{name}</h3>\n            <p className=\"CurrentUser__email\">{email}</p>\n            <p className=\"CurrentUser__phone\">{phone}</p>\n          </>\n        ) : (\n          <p>loading...</p>\n        )}\n\n        <button\n          className=\"CurrentUser__clear button\"\n          type=\"button\"\n          onClick={onClearUser}\n        >\n          Clear\n        </button>\n\n      </div>\n    )\n\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onClearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    titleSearch: '',\n    todosStatus: 'All',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(({ data }) => this.setState({ todos: [...data] }));\n  }\n\n  onSelectUserById = (userId) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  onSearchByTitle = ({ value }) => {\n    this.setState({ titleSearch: value });\n  };\n\n  onSetTodosStatus = (status) => {\n    this.setState({ todosStatus: status });\n  };\n\n  onClearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  prepareTodos = () => {\n    const { todos, titleSearch, todosStatus } = this.state;\n\n    let visibleTodos = [...todos];\n\n    if (todosStatus === 'Active') {\n      visibleTodos = todos.filter(({ completed }) => !completed);\n    }\n\n    if (todosStatus === 'Completed') {\n      visibleTodos = todos.filter(({ completed }) => completed);\n    }\n\n    if (titleSearch) {\n      visibleTodos = visibleTodos.filter(todo => (\n        (`${todo.title}`).toLowerCase().includes(titleSearch.toLowerCase())\n      ));\n    }\n\n    return visibleTodos;\n  };\n\n  render() {\n    const { titleSearch, selectedUserId } = this.state;\n    const visibleTodos = this.prepareTodos()\n      .filter(todos => todos.title);\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {visibleTodos && (\n            <TodoList\n              todos={visibleTodos}\n              selectedUserId={selectedUserId}\n              titleSearch={titleSearch}\n              onSearchByTitle={this.onSearchByTitle}\n              onSelectUserById={this.onSelectUserById}\n              onSetTodosStatus={this.onSetTodosStatus}\n            />\n          )}\n\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClearUser={this.onClearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}